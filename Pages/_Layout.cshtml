@using Microsoft.AspNetCore.Components.Web
@namespace BlazorApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="BlazorApp.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    
    @*<script src="_framework/blazor.server.js"></script>*@
    <script src="js/node_modules/canvas-gauges/gauge.min.js"></script>
    <script src="https://cdn.plot.ly/plotly-2.3.1.min.js"></script>
    <script>
        window.showGraph = (graphDiv, data) => {
            var plotData = {y: data, type: 'lines'};
            Plotly.newPlot(graphDiv, [plotData], {title: 'Celsius Temperatures by Day'});
        }
        var objectRef;
    
        window.populateObjectRef = (ref) => {
            objectRef = ref;
        };
        window.calculateAverages = async () => {
            var averages = objectRef.invokeMethodAsync('CalculateAveragesAsync');
            $('#avgF').html(averages[0]);
            $('#avgC').html(averages[1]);
        };
    </script>
</body>
</html>
